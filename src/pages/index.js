import Head from 'next/head';
import styles from '../styles/Home.module.scss';

import { useAuth } from '../hooks/useAuth';

import Bio from '../components/Bio';
import Post from '../components/Post';
import PostForm from '../components/PostForm';
import { useState } from 'react';
import { getAllPosts, createPost } from '../lib/posts';

export default function Home({ posts: defaultPosts }) {
  const { user, logIn, logOut } = useAuth();
  const [posts, updatePosts] = useState(defaultPosts);

  const handleOnSubmit = async (data, e) => {
    e.preventDefault();

    await createPost(data);

    getAllPosts().then((posts) => {
      updatePosts(posts);
    });
  };

  // function to sort posts by date in reverse chronological order
  function sortPosts(posts) {
    return posts.sort((a, b) => {
      return new Date(b.date) - new Date(a.date);
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Twitter clone</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {!user ? (
        <p>
          <button onClick={logIn}>Log In</button>
        </p>
      ) : (
        <p>
          <button onClick={logOut}>Log out</button>
        </p>
      )}

      <main className={styles.main}>
        <Bio
          headshot='https://pbs.twimg.com/profile_images/845865860753494017/hb9FhkE0_400x400.jpg'
          name='Khalid'
          tagline='Front-end developer'
          role='Some content'
        />
        <ul className={styles.posts}>
          {sortPosts(posts).map((post) => (
            <li key={post.id}>
              <Post
                content={post.content}
                date={new Intl.DateTimeFormat('en-us', {
                  dateStyle: 'short',
                  timeStyle: 'short',
                }).format(new Date(post.date))}
              />
            </li>
          ))}
        </ul>

        {user && <PostForm onSubmit={handleOnSubmit} />}
      </main>
    </div>
  );
}

export async function getStaticProps() {
  const posts = await getAllPosts();
  return {
    props: {
      posts: [],
    },
  };
}
